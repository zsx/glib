# vim: ft=python expandtab
import os
Import('env_test')

env_test_gobject = env_test.Clone()
env_test_gobject.Append(CFLAGS=env_test['DEBUG_CFLAGS'])
env_test_gobject['CPPDEFINES'] = env_test['DEBUG_CPPDEFINES']
env_test_gobject.Append(CPPPATH=['#', '#glib', '#gmodule'])
env_test_gobject.Append(LIBS=['libglib-2.0', 'libgthread-2.0', 'libgobject-2.0', 'libgmodule-2.0'])
env_test_gobject.Append(LIBPATH=['#glib', '#gthread', '#gobject', '#gmodule'])

libtestgobject_sources = ["testmarshal.c",
                          "testmodule.c"]

tests = Split("deftype					\
               gvalue-test				\
               paramspec-test				\
               accumulator				\
               defaultiface				\
               dynamictype				\
               ifacecheck				\
               ifaceinit				\
               ifaceinherit				\
               ifaceproperties				\
               override				\
	       performance				\
               performance-threaded			\
               singleton				\
               references")
env_test_gobject.Command('testmarshal.c', 'testmarshal.list', '''
        "gobject\\glib-genmarshal" --prefix=test_marshal $SOURCE --body >> $TARGET''')
env_test_gobject.Depends('testmarshal.c', '#gobject/glib-genmarshal.exe')

env_test_gobject.Command('testmarshal.h', 'testmarshal.list', '''
        "gobject\\glib-genmarshal" --prefix=test_marshal $SOURCE --header >> $TARGET >> $TARGET''')
env_test_gobject.Depends('testmarshal.h', '#gobject/glib-genmarshal.exe')

env_test_gobject.StaticLibrary('libtestgobject', libtestgobject_sources)

for i in tests:
    e = env_test_gobject.Clone(PDB = i + '.pdb')
    e.Program(i, [i + '.c', 'libtestgobject.lib'])

for x in tests:
    if x not in ['']:
        env_test_gobject.AlwaysBuild(env_test_gobject.Alias('test', [], os.path.join('tests', 'gobject', x + '.exe')))
